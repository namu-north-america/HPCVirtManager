name: Docker Image CI

on:
  push:
    branches: 
      - "deploy/*"

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout repo
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract branch name 
        id: extract_branch 
        run: |
          BRANCH_NAME=${{ github.head_ref || github.ref_name }}
          MODIFIED_BRANCH_NAME=${BRANCH_NAME//deploy\//} 
          echo "Modified branch name: $MODIFIED_BRANCH_NAME"

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPO }}:${{ github.head_ref || github.ref_name }} 


# name: Docker Image CI

# on:
#   push:
#     branches:
#       - "deploy/*"  # Specify the branch pattern for developer-specific branches

# jobs:
#   build:
#     runs-on: ubuntu-22.04
#     steps:
#       - name: Checkout repo
#         uses: actions/checkout@v4

#       - name: Login to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ vars.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Set up QEMU
#         uses: docker/setup-qemu-action@v3

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3

#       - name: Extract branch name
#         id: extract_branch
#         run: |
#           BRANCH_NAME=${{ github.head_ref || github.ref_name }}
#           MODIFIED_BRANCH_NAME=${BRANCH_NAME//deploy\//}  # Stripping out 'deploy/' if present
#           echo "Modified branch name: $MODIFIED_BRANCH_NAME"
#           echo "BRANCH_NAME=$MODIFIED_BRANCH_NAME" >> $GITHUB_ENV

#       - name: Get npm version
#         id: package-version
#         uses: martinbeentjes/npm-get-version-action@v1.3.1

#       - name: Build and push
#         uses: docker/build-push-action@v6
#         with:
#           context: .
#           push: true
#           tags: ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPO }}:${{ env.BRANCH_NAME }}-${{ steps.package-version.outputs.current-version }}

#       - name: Login to ArgoCD
#         run: |
#           argocd login $ARGOCD_SERVER --username $ARGOCD_USERNAME --password $ARGOCD_PASSWORD --insecure
#         env:
#           ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
#           ARGOCD_USERNAME: ${{ secrets.ARGOCD_USERNAME }}
#           ARGOCD_PASSWORD: ${{ secrets.ARGOCD_PASSWORD }}

#       - name: Create the namespace for the branch
#         run: |
#           kubectl create namespace $MODIFIED_BRANCH_NAME || echo "Namespace $MODIFIED_BRANCH_NAME already exists"
        
#       - name: Create or sync ArgoCD app
#         run: |
#           # Check if the ArgoCD app exists for the branch
#           if ! argocd app get $MODIFIED_BRANCH_NAME; then
#             echo "Creating new ArgoCD app for branch $MODIFIED_BRANCH_NAME"
#             argocd app create $MODIFIED_BRANCH_NAME \
#               --repo https://github.com/${{ github.repository }} \
#               --path kubernetes \
#               --dest-server https://kubernetes.default.svc \
#               --dest-namespace $MODIFIED_BRANCH_NAME \
#               --sync-policy automated \
#               --revision $MODIFIED_BRANCH_NAME
#           else
#             echo "Syncing existing ArgoCD app for branch $MODIFIED_BRANCH_NAME"
#             argocd app sync $MODIFIED_BRANCH_NAME
#           fi

#       - name: Wait for ArgoCD deployment
#         run: |
#           argocd app wait $MODIFIED_BRANCH_NAME
