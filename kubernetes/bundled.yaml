---
apiVersion: v1
kind: Namespace
metadata:
  name: cocktail-virt
  labels:
    app: cocktail-virt
    cocktail-virt.io/version: __TAG__

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cocktail-virt
  namespace: cocktail-virt
  labels:
    app: cocktail-virt
    cocktail-virt.io/version: __TAG__

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: images.cocktail-virt.io
spec:
  group: cocktail-virt.io
  versions:
    - name: v1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              x-kubernetes-validations:
                - rule: "self.type.matches('^(http)|(gcs)|(s3)|(registry)|(pvc)$')"
                  message: "spec.type should be: http, registry, s3, gcs, pvc"
              required:
                - type
                - readableName
              oneOf:
                - required: ["http"]
                - required: ["registry"]
                - required: ["s3"]
                - required: ["gcs"]
                - required: ["pvc"]
              properties:
                type:
                  type: string
                credentials:
                  type: string
                readableName:
                  type: string
                readableDescription:
                  type: string
                http:
                  type: object
                  properties:
                    url:
                      type: string
                registry:
                  type: object
                  properties:
                    url:
                      type: string
                s3:
                  type: object
                  properties:
                    url:
                      type: string
                gcs:
                  type: object
                  properties:
                    url:
                      type: string
                pvc:
                  type: object
                  properties:
                    name:
                      type: string
                    namespace:
                      type: string
      additionalPrinterColumns:
        - name: "Type"
          type: "string"
          jsonPath: ".spec.type"
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
  scope: Namespaced
  names:
    plural: images
    singular: image
    kind: Image
    shortNames:
      - img

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cocktail-virt
rules:
  - apiGroups: [""]
    resources: ["nodes", "namespaces"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources:
      [
        "persistentvolumeclaims",
        "persistentvolumes",
        "services",
        "secrets",
        "serviceaccounts",
        "configmaps",
        "deployments",
      ]
    verbs: ["*"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["rolebindings"]
    verbs: ["*"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["*"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list"]
  - apiGroups: ["k8s.cni.cncf.io"]
    resources: ["network-attachment-definitions"]
    verbs: ["get", "list"]
  - apiGroups: ["kubevirt.io"]
    resources: ["virtualmachines", "virtualmachineinstances"]
    verbs: ["*"]
  - apiGroups: ["subresources.kubevirt.io"]
    resources: ["*"]
    verbs: ["get", "list", "update", "patch"]
  - apiGroups: ["instancetype.kubevirt.io"]
    resources: ["*"]
    verbs: ["*"]
  - apiGroups: ["cdi.kubevirt.io"]
    resources: ["*"]
    verbs: ["*"]
  - apiGroups: ["pool.kubevirt.io"]
    resources: ["*"]
    verbs: ["*"]
  - apiGroups: ["scheduling.k8s.io"]
    resources: ["priorityclasses"]
    verbs: ["get", "list"]
  - apiGroups: ["autoscaling"]
    resources: ["horizontalpodautoscalers"]
    verbs: ["*"]
  - apiGroups: ["cluster.x-k8s.io"]
    resources: ["clusters", "machinedeployments"]
    verbs: ["*"]
  - apiGroups: ["controlplane.cluster.x-k8s.io"]
    resources: ["kubeadmcontrolplanes"]
    verbs: ["*"]
  - apiGroups: ["infrastructure.cluster.x-k8s.io"]
    resources: ["kubevirtmachinetemplates", "kubevirtclusters"]
    verbs: ["*"]
  - apiGroups: ["bootstrap.cluster.x-k8s.io"]
    resources: ["kubeadmconfigtemplates"]
    verbs: ["*"]
  - apiGroups: ["addons.cluster.x-k8s.io"]
    resources: ["clusterresourcesets"]
    verbs: ["*"]
  - apiGroups: ["cocktail-virt.io"]
    resources: ["images"]
    verbs: ["*"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cocktail-virt
  labels:
    app: cocktail-virt
    cocktail-virt.io/version: __TAG__
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cocktail-virt
subjects:
  - kind: ServiceAccount
    name: cocktail-virt
    namespace: cocktail-virt

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cocktail-virt-kccm
rules:
  - apiGroups: ["kubevirt.io"]
    resources: ["virtualmachines"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["kubevirt.io"]
    resources: ["virtualmachineinstances"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["*"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cocktail-virt-kccm
  labels:
    app: cocktail-virt
    cocktail-virt.io/version: __TAG__
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cocktail-virt-kccm
subjects:
  - kind: ServiceAccount
    name: cocktail-virt
    namespace: cocktail-virt

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cocktail-virt-cas-workload
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - persistentvolumeclaims
      - persistentvolumes
      - pods
      - replicationcontrollers
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - pods/eviction
    verbs:
      - create
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - csinodes
      - storageclasses
      - csidrivers
      - csistoragecapacities
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - replicasets
      - statefulsets
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - delete
      - get
      - update
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cocktail-virt-cas-management
rules:
  - apiGroups:
      - cluster.x-k8s.io
    resources:
      - machinedeployments
      - machinedeployments/scale
      - machines
      - machinesets
      - machinepools
    verbs:
      - get
      - list
      - update
      - watch
  - apiGroups:
      - infrastructure.cluster.x-k8s.io
    resources:
      - kubevirtcluster
      - kubevirtmachinetemplate
      - kubevirtmachinetemplates
    verbs:
      - get
      - list
      - update
      - watch

---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
description: Priority class for VMs which should not be preemtited.
metadata:
  name: vm-standard
  labels:
    app: cocktail-virt
    cocktail-virt.io/version: __TAG__
    cocktail-virt.io/managed: "true"
preemptionPolicy: Never
value: 999999999

---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
description: Priority class for VMs which are allowed to be preemtited.
metadata:
  name: vm-preemptible
  labels:
    app: cocktail-virt
    cocktail-virt.io/version: __TAG__
    cocktail-virt.io/managed: "true"
preemptionPolicy: PreemptLowerPriority
value: 1000000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cocktail-virt
  namespace: cocktail-virt
  labels:
    app: cocktail-virt
    cocktail-virt.io/version: __TAG__
spec:
  selector:
    matchLabels:
      app: cocktail-virt
      cocktail-virt.io/version: __TAG__
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: cocktail-virt
        cocktail-virt.io/version: __TAG__
    spec:
      containers:
        - name: cocktail-virt
          image: namunorthamerica/hpc-virt:0.1.3
          imagePullPolicy: Always
          resources:
          ports:
            - name: http
              containerPort: 8080
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 10000
            runAsGroup: 30000
          volumeMounts:
            - name: cache-volume
              mountPath: /var/cache/nginx
            - name: run-volume
              mountPath: /var/run
            - name: auth-config
              mountPath: /etc/nginx/auth.d/
            - name: auth-secret
              mountPath: /etc/nginx/secret.d/
            - name: prometheus-config
              mountPath: /etc/nginx/location.d/
      serviceAccountName: cocktail-virt
      restartPolicy: Always
      volumes:
        - name: cache-volume
          emptyDir: {}
        - name: run-volume
          emptyDir: {}
        - name: auth-config
          configMap:
            name: auth-config
            optional: true
        - name: auth-secret
          secret:
            secretName: auth-secret
            optional: true
        - name: prometheus-config
          configMap:
            name: prometheus-config
            optional: true

---
apiVersion: v1
kind: Service
metadata:
  name: cocktail-virt
  namespace: cocktail-virt
  labels:
    app: cocktail-virt
    cocktail-virt.io/version: __TAG__
spec:
  type: ClusterIP
  selector:
    app: cocktail-virt
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
